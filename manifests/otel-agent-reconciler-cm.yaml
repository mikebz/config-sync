# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This ConfigMap is used in the reconciler pod.
# It contains the OpenTelemetry (OTEL) agent configuration for metrics and resource detection, with sync specific attributes using OTLP.

apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-agent-reconciler
  namespace: config-management-system
  labels:
    app: opentelemetry
    component: otel-agent
    configmanagement.gke.io/system: "true"
    configmanagement.gke.io/arch: "csmr"
data:
  otel-agent-reconciler-config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
    exporters:
      otlp:
        endpoint: otel-collector.config-management-monitoring:4317
        tls:
          insecure: true
    processors:
      # Attributes processor adds custom configsync metric labels to applicable
      # metrics to identify the sync object used to configure this deployment.
      #
      # Note: configsync.sync.generation is explicitly excluded here, because it
      # is high cardinality. So we don't want to send it as a label, only as a
      # resource attribute. That way it's only propagated to Prometheus, and not
      # Monarch or Cloud Monitoring, which ignore custom resource attributes.
      attributes:
        actions:
          - key: configsync.sync.kind
            action: upsert
            value: ${CONFIGSYNC_SYNC_KIND}
          - key: configsync.sync.name
            action: upsert
            value: ${CONFIGSYNC_SYNC_NAME}
          - key: configsync.sync.namespace
            action: upsert
            value: ${CONFIGSYNC_SYNC_NAMESPACE}
      batch:
      # Populate resource attributes from OTEL_RESOURCE_ATTRIBUTES env var and
      # the GCE metadata service, if available.
      resourcedetection:
        detectors: [env, gcp]
    extensions:
      health_check:
        endpoint: 0.0.0.0:13133
    service:
      extensions: [health_check]
      pipelines:
        metrics:
          receivers: [otlp]
          processors: [resourcedetection, attributes, batch]
          exporters: [otlp]
      telemetry:
        logs:
          level: "INFO"
